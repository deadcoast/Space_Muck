[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "python_fixer"
version = "0.1.0"
description = "Fix Python import and class structure issues in your project using ML-enhanced analysis"
authors = [
    {name = "Codeium"}
]
requires-python = ">=3.7"
dependencies = [
    "pydantic>=2.0.0",
    "networkx>=3.0",
    "numpy>=1.24.0",
    "rich>=13.0.0",
    "libcst>=1.0.0",
    "rustworkx>=0.13.0",
    "sympy>=1.12",
    "torch>=2.0.0",
    "typeguard>=4.0.0",
    "pygments>=2.15.0",
    "scikit-learn>=1.3.0",
    "scipy>=1.10.0",
    "typing-extensions>=4.5.0"
]

[project.urls]
homepage = "https://github.com/codeium/python_fixer"
repository = "https://github.com/codeium/python_fixer"

[project.scripts]
python-fixer = "python_fixer.cli:main"

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "hypothesis>=6.0.0",
]
dev = [
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=1.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=2.0.0",
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = {find = {where = ["src"]}}

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --import-mode=importlib"
required_plugins = [
    "pytest-cov",
    "hypothesis"
]
filterwarnings = [
    "ignore::DeprecationWarning:torch.*:",
    "ignore::UserWarning:torch.*:",
    "ignore::FutureWarning:sklearn.*:"
]

[tool.setuptools.package-data]
python_fixer = ["py.typed"]

[tool.coverage.run]
source = ["python_fixer"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "return NotImplemented",
    "raise ImportError"
]
